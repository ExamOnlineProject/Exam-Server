<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyg.exam.dao.PaperDao">
  <resultMap id="BaseResultMap" type="com.zyg.exam.model.Paper">
    <id column="paperid" jdbcType="INTEGER" property="paperid" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="finishtime" jdbcType="TIMESTAMP" property="finishtime" />
    <result column="pattern" jdbcType="INTEGER" property="pattern" />
    <result column="ismonitor" jdbcType="VARCHAR" property="ismonitor" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
  </resultMap>
  <resultMap id="PaperDTO" type="com.zyg.exam.common.VO.PaperVO">
    <id column="paperid" jdbcType="INTEGER" property="paperId" />
    <result column="starttime" jdbcType="TIMESTAMP" property="startTime" />
    <result column="pattern" jdbcType="INTEGER" property="pattern" />
    <result column="ismonitor" jdbcType="VARCHAR" property="isMonitor" />
    <result column="coursename" jdbcType="VARCHAR" property="courseName" />
    <result column="finishtime" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="classid" jdbcType="INTEGER" property="classid"/>
    <result column="courseid" jdbcType="INTEGER" property="courseid"/>
  </resultMap>
  <resultMap id="Question1" type="com.zyg.exam.model.Question">
    <id column="subjectid" jdbcType="INTEGER" property="subjectid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="option1" jdbcType="VARCHAR" property="option1" />
    <result column="option2" jdbcType="VARCHAR" property="option2" />
    <result column="option3" jdbcType="VARCHAR" property="option3" />
    <result column="option4" jdbcType="VARCHAR" property="option4" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
    <result column="chapterid" jdbcType="INTEGER" property="chapterid" />
  </resultMap>
  <sql id="Base_Column_List">
    paperid, starttime, finishtime, pattern, ismonitor, courseid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paper
    where paperid = #{paperid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from paper where paperid in
    <foreach collection="array" item="paperid" open="(" separator="," close=")">
      #{paperid}
    </foreach>
  </delete>
  <insert id="insert" keyColumn="paperid" keyProperty="paperid" parameterType="com.zyg.exam.model.Paper" useGeneratedKeys="true">
    insert into paper (starttime, finishtime, pattern, 
      ismonitor, courseid)
    values (#{starttime,jdbcType=TIMESTAMP}, #{finishtime,jdbcType=TIMESTAMP}, #{pattern,jdbcType=INTEGER}, 
      #{ismonitor,jdbcType=VARCHAR}, #{courseid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="paperid" keyProperty="paperid" parameterType="com.zyg.exam.model.Paper" useGeneratedKeys="true">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="starttime != null">
        starttime,
      </if>
      <if test="finishtime != null">
        finishtime,
      </if>
      <if test="pattern != null">
        pattern,
      </if>
      <if test="ismonitor != null">
        ismonitor,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishtime != null">
        #{finishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pattern != null">
        #{pattern,jdbcType=INTEGER},
      </if>
      <if test="ismonitor != null">
        #{ismonitor,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyg.exam.model.Paper">
    update paper
    <set>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishtime != null">
        finishtime = #{finishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pattern != null">
        pattern = #{pattern,jdbcType=INTEGER},
      </if>
      <if test="ismonitor != null">
        ismonitor = #{ismonitor,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
    </set>
    where paperid = #{paperid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyg.exam.model.Paper">
    update paper
    set starttime = #{starttime,jdbcType=TIMESTAMP},
      finishtime = #{finishtime,jdbcType=TIMESTAMP},
      pattern = #{pattern,jdbcType=INTEGER},
      ismonitor = #{ismonitor,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=INTEGER}
    where paperid = #{paperid,jdbcType=INTEGER}
  </update>
  <select id="selectPaper" resultMap="PaperDTO,count">
    <bind name="key_offset" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select paperid,paper.starttime,paper.finishtime,paper.pattern,paper.isMonitor,course.coursename from
    paper join course on paper.courseid=course.courseid
    <if test="courseid!=null and courseid!=''">
      where course.courseid=#{courseid,jdbcType=INTEGER}
    </if>
    )a limit #{key_offset},#{pageSize};select found_rows() count;

  </select>
  <select id="selectByClass" resultMap="PaperDTO,count">
    <bind name="key_offset" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select a.coursename,paperid,paper.starttime,paper.finishtime,paper.pattern,paper.isMonitor,a.courseid,a.classid from paper
        join(select coursename,a.courseid,a.classid from course join(select courseid,a.classid from teach
            join(select teachid,class.classid from getclass join class on getclass.classid=class.classid
    <if test="classid!=null and classid!=''">
      where class.classid=#{classid,jdbcType=INTEGER}
    </if>
     )a on a.teachid=teach.teachid)a on course.courseid=a.courseid
    <if test="courseid!=null and courseid!=''">
            where course.courseid=#{courseid,jdbcType=INTEGER}
    </if>
      )a
     on a.courseid=paper.courseid)a limit #{key_offset},#{pageSize};select found_rows() count;
  </select>
  <select id="selectQuestion" resultMap="Question1,count">
    <bind name="key_offset" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select question.* from question join (select questionid from paper_question
    where paperid=#{paperid,jdbcType=INTEGER})a on question.subjectid=a.questionid)a
    limit #{key_offset},#{pageSize};select found_rows() count;
  </select>
  <insert id="insertPaperQuestion" parameterType="java.lang.Integer">
    insert into paper_question (questionid,paperid)
    values (#{questionid},#{paperid});
  </insert>
</mapper>