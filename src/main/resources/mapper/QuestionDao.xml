<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyg.exam.dao.QuestionDao">
  <resultMap id="Question" type="com.zyg.exam.model.Question">
    <id column="subjectid" jdbcType="INTEGER" property="subjectid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="option1" jdbcType="VARCHAR" property="option1" />
    <result column="option2" jdbcType="VARCHAR" property="option2" />
    <result column="option3" jdbcType="VARCHAR" property="option3" />
    <result column="option4" jdbcType="VARCHAR" property="option4" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
    <result column="chapterid" jdbcType="INTEGER" property="chapterid" />
  </resultMap>
  <resultMap id="Question1" type="com.zyg.exam.common.VO.QuestionVO">
    <id column="subjectid" jdbcType="INTEGER" property="subjectid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="option1" jdbcType="VARCHAR" property="option1" />
    <result column="option2" jdbcType="VARCHAR" property="option2" />
    <result column="option3" jdbcType="VARCHAR" property="option3" />
    <result column="option4" jdbcType="VARCHAR" property="option4" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
    <result column="chaptername" jdbcType="INTEGER" property="chapterName" />
    <result column="coursename" jdbcType="INTEGER" property="courseName" />
    <result column="courseid" jdbcType="INTEGER" property="courseid"/>
    <result column="chapterid" jdbcType="INTEGER" property="chapterid"/>
  </resultMap>
  <resultMap id="PaperQuestionVO" type="com.zyg.exam.common.VO.PaperQuestionVO">
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="option1" jdbcType="VARCHAR" property="option1" />
    <result column="option2" jdbcType="VARCHAR" property="option2" />
    <result column="option3" jdbcType="VARCHAR" property="option3" />
    <result column="option4" jdbcType="VARCHAR" property="option4" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="stuanswer" jdbcType="VARCHAR" property="stuAnswer" />
    <result column="credit" jdbcType="INTEGER" property="stuScore"/>
    <result column="value" jdbcType="INTEGER" property="score"/>
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="questionid" jdbcType="INTEGER" property="questionid"/>
  </resultMap>
  <sql id="Base_Column_List">
    subjectid, `type`, content, option1, option2, option3, option4, answer, difficulty, 
    chapterid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="Question">
    select 
    <include refid="Base_Column_List" />
    from question
    where subjectid = #{subjectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from question where subjectid in
    <foreach collection="array" item="subjectid" open="(" separator="," close=")">
      #{subjectid}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.zyg.exam.model.Question">
    insert into question (subjectid, `type`, content, 
      option1, option2, option3, 
      option4, answer, difficulty, 
      chapterid)
    values (#{subjectid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{option1,jdbcType=VARCHAR}, #{option2,jdbcType=VARCHAR}, #{option3,jdbcType=VARCHAR}, 
      #{option4,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{difficulty,jdbcType=VARCHAR}, 
      #{chapterid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zyg.exam.model.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectid != null">
        subjectid,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="option1 != null">
        option1,
      </if>
      <if test="option2 != null">
        option2,
      </if>
      <if test="option3 != null">
        option3,
      </if>
      <if test="option4 != null">
        option4,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="chapterid != null">
        chapterid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectid != null">
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="option1 != null">
        #{option1,jdbcType=VARCHAR},
      </if>
      <if test="option2 != null">
        #{option2,jdbcType=VARCHAR},
      </if>
      <if test="option3 != null">
        #{option3,jdbcType=VARCHAR},
      </if>
      <if test="option4 != null">
        #{option4,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="chapterid != null">
        #{chapterid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyg.exam.model.Question">
    update question
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="option1 != null">
        option1 = #{option1,jdbcType=VARCHAR},
      </if>
      <if test="option2 != null">
        option2 = #{option2,jdbcType=VARCHAR},
      </if>
      <if test="option3 != null">
        option3 = #{option3,jdbcType=VARCHAR},
      </if>
      <if test="option4 != null">
        option4 = #{option4,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        difficulty = #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="chapterid != null">
        chapterid = #{chapterid,jdbcType=INTEGER},
      </if>
    </set>
    where subjectid = #{subjectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyg.exam.model.Question">
    update question
    set `type` = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      option1 = #{option1,jdbcType=VARCHAR},
      option2 = #{option2,jdbcType=VARCHAR},
      option3 = #{option3,jdbcType=VARCHAR},
      option4 = #{option4,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=VARCHAR},
      chapterid = #{chapterid,jdbcType=INTEGER}
    where subjectid = #{subjectid,jdbcType=INTEGER}
  </update>



  <select id="selectQuestion" resultMap="Question1,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select a.subjectid,a.type,a.content,a.option1,a.option2,a.option3,a.option4,a.answer,a.difficulty,a.chaptername,course.coursename,a.chapterid,a.courseid from
      (select subjectid,type,content,option1,option2,option3,option4,answer,difficulty,chaptername,courseid,chapter.chapterid from question
         left join chapter  on question.chapterid=chapter.chapterid

      <if test="chapterid==null or chapterid==''">

        <if test="courseid==null or courseid==''">
          where
        </if>
      </if>
      <if test="chapterid!=null and chapterid!=''">
      where chapter.chapterid=#{chapterid,jdbcType=INTEGER}
        <if test="difficulty!=null and difficulty!=''">
          and
        </if>
      </if>
        <if test="difficulty!=null and difficulty!=''">
        question.difficulty=#{difficulty,jdbcType=VARCHAR}
            <if test="key!=null and key!=''">
          and
        </if>
        </if>
          <if test="key!=null and key!=''">
             question.content like CONCAT('%',#{key,jdbcType=VARCHAR},'%')
          </if>
  )a
        left join course on course.courseid=a.courseid
    <if test="courseid!=null and courseid!=''">
    where course.courseid=#{courseid,jdbcType=INTEGER}
    </if>)a limit #{beginIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER};select found_rows() count;
  </select>
  <select id="listQuestion" resultMap="Question1,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select a.subjectid,a.type,a.content,a.option1,a.option2,a.option3,a.option4,a.answer,a.difficulty,a.chaptername,course.coursename,a.chapterid,a.courseid from
    (select subjectid,type,content,option1,option2,option3,option4,answer,difficulty,chaptername,courseid,chapter.chapterid from question
    left join chapter  on question.chapterid=chapter.chapterid )a
    left join course on course.courseid=a.courseid )a limit #{beginIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER};select found_rows() count;
  </select>

  <insert id="insertQuestionDTO"  parameterType="com.zyg.exam.common.VO.QuestionVO">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectid != null">
        subjectid,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="option1 != null">
        option1,
      </if>
      <if test="option2 != null">
        option2,
      </if>
      <if test="option3 != null">
        option3,
      </if>
      <if test="option4 != null">
        option4,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="chapterName != null">
        chapterid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectid != null">
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="option1 != null">
        #{option1,jdbcType=VARCHAR},
      </if>
      <if test="option2 != null">
        #{option2,jdbcType=VARCHAR},
      </if>
      <if test="option3 != null">
        #{option3,jdbcType=VARCHAR},
      </if>
      <if test="option4 != null">
        #{option4,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        (select chapterid from chapter where chaptername=#{chapterName,jdbcType=VARCHAR}),
      </if>
    </trim>
  </insert>
  <select id="selectByType" parameterType="string" resultType="integer">
    select
    subjectid
    from question
    where question.type=#{type,jdbcType=VARCHAR}
  </select>
  <select id="selectByChapter" resultType="integer">
    select
      subjectid
    from question
    where difficulty=#{difficulty,jdbcType=VARCHAR} and chapterid=#{chapterid,jdbcType=INTEGER} and type=#{type,jdbcType=VARCHAR}
  </select>
  <select id="selectByRecord" parameterType="java.lang.Integer" resultType="com.zyg.exam.common.VO.PaperQuestionVO">

    select * from (select type,content,option1,option2,option3,option4,question.answer,a.questionid,a.credit,a.stuanswer,a.recordid from question join (select questionid,credit,answer.answer stuanswer,recordid from answer where recordid=#{recordid,jdbcType=INTEGER})a on a.questionid=question.subjectid)c
            ,
                  (select  distinct value,b.recordid recordid1 from strategy join (select paperid,recordid from record where recordid=#{recordid,jdbcType=INTEGER})b on strategy.paperid=b.paperid)b where c.recordid=b.recordid1 GROUP BY c.questionid
  </select>
  <select id="selectByPaperid" parameterType="java.lang.Integer" resultType="com.zyg.exam.model.Question">
    select <include refid="Base_Column_List" />
        from question join (select questionid from paper_question where paperid=#{paperid})a
    on question.subjectid=a.questionid
  </select>
</mapper>