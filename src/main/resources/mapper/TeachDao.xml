<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyg.exam.dao.TeachDao">
  <resultMap id="BaseResultMap" type="com.zyg.exam.model.Teach">
    <result column="teacherid" jdbcType="INTEGER" property="teacherid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="teachid" jdbcType="INTEGER" property="teachid" />
  </resultMap>
  <resultMap id="TeachInfoVO" type="com.zyg.exam.common.VO.TeachInfoVO">
    <result column="teachid" jdbcType="INTEGER" property="id" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="teachid" jdbcType="INTEGER" property="id" />
    <result column="id" jdbcType="INTEGER" property="teacherid"/>
    <result column="classid" jdbcType="INTEGER" property="classid"/>
    <result column="coursename" jdbcType="VARCHAR" property="coursename"/>
    <result column="classname" jdbcType="VARCHAR" property="classname"/>
    <result column="name" jdbcType="VARCHAR" property="teachername"/>
  </resultMap>
  <insert id="insert" keyColumn="teachid" keyProperty="teachid" parameterType="com.zyg.exam.model.Teach" useGeneratedKeys="true">
    insert into teach (teacherid, courseid, `time`
      )
    values (#{teacherid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="teachid" keyProperty="teachid" parameterType="com.zyg.exam.model.Teach" useGeneratedKeys="true">
    insert into teach
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        teacherid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="time != null">
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="listTeachInfo" resultMap="TeachInfoVO,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from
    (select * from(select name,user.id from teach join user on teach.teacherid = user.id
    <if test="name!=null and name!= ''">
    where user.name=#{name,jdbcType=VARCHAR}
    </if>)a
    ,
    (select coursename,course.courseid from teach join course on teach.courseid = course.courseid
    <if test="courseid!=null and courseid!= ''">
        where course.courseid=#{courseid,jdbcType=INTEGER}
        </if>)b
    ,
    (select teachid from teach)c
    ,
    (select classname,a.classid from(select classid from teach join getclass on teach.teachid = getclass.teachid)a join
    class on a.classid = class.classid
    <if test="classid!=null and classid!= ''">
    where class.classid=#{classid,jdbcType=INTEGER}
        </if>)d
    )a limit #{beginIndex}, #{pageSize};select found_rows() count;
  </select>
  <delete id="deleteTeach">
    delete from teach where teachid in
    <foreach collection="array" item="teachid" open="(" separator="," close=")">
      #{teachid}
    </foreach>
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyg.exam.model.Teach">
    update teach
    <set>
      <if test="teacherid != null">
        `teacherid` = #{teacherid},
      </if>
      <if test="courseid != null">
        `courseid` = #{courseid},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
    </set>
    where teachid = #{teachid,jdbcType=INTEGER}
  </update>
</mapper>