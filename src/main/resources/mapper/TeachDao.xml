<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyg.exam.dao.TeachDao">
  <resultMap id="BaseResultMap" type="com.zyg.exam.model.Teach">
    <result column="teacherid" jdbcType="INTEGER" property="teacherid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="teachid" jdbcType="INTEGER" property="teachid" />
  </resultMap>
  <resultMap id="TeachInfoVO" type="com.zyg.exam.common.VO.TeachInfoVO">
    <result column="teachid" jdbcType="INTEGER" property="id" />
    <result column="id" jdbcType="INTEGER" property="teacherid"/>
    <result column="classid" jdbcType="INTEGER" property="classid"/>
    <result column="classname" jdbcType="VARCHAR" property="classname"/>
    <result column="name" jdbcType="VARCHAR" property="teachername"/>
  </resultMap>
  <insert id="insert" keyColumn="teachid" keyProperty="teachid" parameterType="com.zyg.exam.model.Teach" useGeneratedKeys="true">
    insert into teach (teacherid, courseid
      )
    values (#{teacherid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="teachid" keyProperty="teachid" parameterType="com.zyg.exam.model.Teach" useGeneratedKeys="true">
    insert into teach
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        teacherid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <delete id="deleteTeach">
    delete from teach where teachid in
    <foreach collection="array" item="teachid" open="(" separator="," close=")">
      #{teachid}
    </foreach>
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyg.exam.model.Teach">
    update teach
    <set>
      <if test="teacherid != null">
        `teacherid` = #{teacherid},
      </if>
      <if test="courseid != null">
        `courseid` = #{courseid},
      </if>
    </set>
    where teachid = #{teachid,jdbcType=INTEGER}
  </update>
  <select id="selectTeachInfo" resultMap="TeachInfoVO,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select a.teachid,a.id,a.name,a.courseid,course.coursename from course join
    (select teachid,user.id,user.name,courseid from teach join user
        on teach.teacherid=user.id
        <if test="name!=null and name!=''">
            where user.name=#{name,jdbcType=VARCHAR}
        </if>)a on course.courseid=a.courseid
        <if test="courseid!=null and courseid!=''">
            where course.courseid=#{courseid,jdbcType=INTEGER}
        </if>
        )a limit #{beginIndex},#{pageSize};select found_rows() count;
  </select>
</mapper>