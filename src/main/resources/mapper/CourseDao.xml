<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyg.exam.dao.CourseDao">
  <resultMap id="BaseResultMap" type="com.zyg.exam.model.Course">
    <id column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="coursename" jdbcType="VARCHAR" property="coursename" />
    <result column="teacherid" jdbcType="VARCHAR" property="teacherid" />
  </resultMap>
  <resultMap id="ChapterMap" type="com.zyg.exam.common.VO.ChapterVO">
    <id column="chapterid" jdbcType="INTEGER" property="chapterid" />
    <result column="chaptername" jdbcType="VARCHAR" property="chaptername" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="index" jdbcType="VARCHAR" property="index" />
    <result column="coursename" jdbcType="VARCHAR" property="coursename"/>
  </resultMap>
  <resultMap id="CourseVO" type="com.zyg.exam.common.VO.CourseVO">
    <id column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="coursename" jdbcType="VARCHAR" property="coursename" />
    <result column="name" jdbcType="VARCHAR" property="teachername" />
    <result column="id" jdbcType="INTEGER" property="teacherid"/>
  </resultMap>

  <sql id="Base_Column_List">
    courseid, coursename, teacherid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where courseid = #{courseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from course where courseid in
    <foreach collection="array" item="courseid" open="(" separator="," close=")">
      #{courseid}
    </foreach>
  </delete>
  <insert id="insert" keyColumn="courseid" keyProperty="courseid" parameterType="com.zyg.exam.model.Course" useGeneratedKeys="true">
    insert into course (coursename, teacherid)
    values (#{coursename,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="courseid" keyProperty="courseid" parameterType="com.zyg.exam.model.Course" useGeneratedKeys="true">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coursename != null">
        coursename,
      </if>
      <if test="teacherid != null">
       teacherid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyg.exam.model.Course">
    update course
    <set>
      <if test="coursename != null">
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        teacherid = #{teacherid,jdbcType=VARCHAR},
      </if>
    </set>
    where courseid = #{courseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyg.exam.model.Course">
    update course
    set coursename = #{coursename,jdbcType=VARCHAR},
      teacherid = #{teacherid,jdbcType=VARCHAR}
    where courseid = #{courseid,jdbcType=INTEGER}
  </update>
  <select id="listCourse" resultMap="CourseVO,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select
    courseid,coursename,user.name,user.id
    from course left join user on course.teacherid=user.id)a limit #{beginIndex},#{pageSize};select found_rows() count;

  </select>
  <select id="selectChapter"  resultMap="ChapterMap,count">
    <bind name="beginIndex" value="(pageIndex-1)*pageSize"></bind>
    select SQL_CALC_FOUND_ROWS * from(select chapterid,chaptername,chapter.index,course.coursename,course.courseid
      from chapter left join course on chapter.courseid=course.courseid
        <if test="courseid!=null">
          where course.courseid=#{courseid}
        </if>
       order by chapter.courseid,chapter.index)a limit #{beginIndex},#{pageSize};select found_rows() count;
  </select>
  <select id="selectQuestion" parameterType="java.lang.Integer" resultType="com.zyg.exam.common.VO.QuestionVO">
    select a.subjectid,a.type,a.content,a.option1,a.option2,a.option3,a.option4,a.answer,a.difficulty,a.chaptername,course.coursename from
       (select subjectid,type,content,option1,option2,option3,option4,answer,difficulty,chaptername,courseid from question
           left join chapter  on question.chapterid=chapter.chapterid )a left join course on course.courseid=a.courseid where course.courseid=#{courseid}


  </select>
  <insert id="importCourse"  parameterType="com.zyg.exam.common.VO.CourseVO" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coursename != null">
        coursename,
      </if>
      <if test="name != null">
        (select teacherid from teacher where name=#{name,jdbcType=VARCHAR}),
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        (select id from user where name=#{name,jdbcType=VARCHAR}),
      </if>
    </trim>
  </insert>
  <select id="selectCourse" parameterType="java.lang.Integer" resultType="com.zyg.exam.common.VO.OptionVO">
   select a.courseid id,course.coursename name from  (select teach.courseid from teach left join user on teach.teacherid=user.id where
    user.id=#{id,jdbcType=INTEGER})a left join course on a.courseid=course.courseid
  </select>



</mapper>